---
# tasks file for the elasticsearch installer

- name: 'Prepare the download location'
  file:
    path: '{{ elasticsearch__temp_dir }}'
    state: directory
    mode: '0750'

- name: 'Download the .deb package'
  environment:
    http_proxy: '{{ http_proxy }}'
  get_url:
    url: '{{ elasticsearch__download_upstream_deb }}'
    dest: '{{ elasticsearch__temp_file }}'
    checksum: '{{ elasticsearch__checksum_deb }}'

- name: 'Install Elasticsearch'
  apt:
    deb: '{{ elasticsearch__temp_file }}'
  become: true

- name: 'Test plugin installation'
  become: True
  become_user: '{{ elasticsearch__user }}'
  shell: ./bin/plugin list | sed -e '1d' -e 's/    - //'
  args:
    chdir: '{{ elasticsearch__home }}'
  register: elasticsearch__plugin_installation_status

- name: 'Install plugins'
  become: True
  become_user: '{{ elasticsearch__user }}'
  shell: ./bin/plugin install '{{ item }}'
  args:
    chdir: '{{ elasticsearch__home }}'
  with_items: '{{ elasticsearch__plugins | difference(elasticsearch__plugin_installation_status.stdout_lines) }}'

- name: 'Set the cluster name, try 1'
  become: True
  replace:
    dest: '{{ elasticsearch__config }}/elasticsearch.yml'
    regexp: '^cluster.name: .*'
    replace: 'cluster.name: {{ elasticsearch__cluster_name }}'
  register: cluster_name_set

- name: 'Set the cluster name, try 2'
  become: True
  lineinfile:
    dest: '{{ elasticsearch__config }}/elasticsearch.yml'
    insertafter: '^# cluster.name: my-application'
    line: 'cluster.name: {{ elasticsearch__cluster_name }}'
  when: not cluster_name_set.changed

